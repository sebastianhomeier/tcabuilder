include:
  - remote: 'https://git.spooner.io/ci-templates/gitlab-anybadge-creator/-/raw/main/anybadges.yml'
  - remote: 'https://git.spooner.io/ci-templates/composer-packages/-/raw/main/composer-packages.yml'

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/

stages:
  - test
  - packages
  - badges
  - release

"PHP CS Fixer":
  stage: test
  image: ekreative/php-cs-fixer:2
  script:
    - php-cs-fixer fix --dry-run --config=.gitlab-ci/.php_cs --diff

"PHP Static Analyzer":
  stage: test
  image: composer:2.0.7
  before_script:
    - composer global require saschaegerer/phpstan-typo3
  script:
    - composer install --ignore-platform-reqs
    - /tmp/vendor/bin/phpstan analyse -l 4 -c .gitlab-ci/phpstan.neon

"PHP Rector Analyzer":
  stage: test
  image: composer:2.0.7
  before_script:
    - composer install --ignore-platform-reqs
    - mkdir build
    - apk update && apk add icu-dev
    - docker-php-ext-install intl
  script:
    - composer test:rector
  allow_failure: true

"Create Badge":
  stage: badges
  script:
    - latest_version=$(git describe --abbrev=0)
    - anybadge -l "Latest Version" -v $latest_version -f latestVersion.svg -c blue

.unit_tests: &unit_tests
  stage: test
  image: php:$PHP_VERSION
  before_script:
    - apt-get update && apt-get install -y bash
    - bash ./.gitlab-ci/docker_install.sh > /dev/null
    - composer install --ignore-platform-reqs
    - composer require typo3/minimal:{$TYPO3_VERSION} typo3/cms-lowlevel:{$TYPO3_VERSION} -W
  script:
    - ls -l
    - XDEBUG_MODE=coverage vendor/bin/phpunit -c ./.gitlab-ci/phpunit.xml
  artifacts:
    reports:
      junit: build/*-report.xml

"Unit Tests with PHP 7.2 and TYPO3 v8":
  <<: *unit_tests
  variables:
    PHP_VERSION: '7.2'
    TYPO3_VERSION: '^8.7'

"Unit Tests with PHP 7.2 and TYPO3 v9":
  <<: *unit_tests
  variables:
    PHP_VERSION: '7.2'
    TYPO3_VERSION: '^9.5'

"Unit Tests with PHP 7.2 and TYPO3 v10":
  <<: *unit_tests
  variables:
    PHP_VERSION: '7.2'
    TYPO3_VERSION: '^10.4'

"Unit Tests with PHP 7.3 and TYPO3 v8":
  <<: *unit_tests
  variables:
    PHP_VERSION: '7.3'
    TYPO3_VERSION: '^8.7'

"Unit Tests with PHP 7.3 and TYPO3 v9":
  <<: *unit_tests
  variables:
    PHP_VERSION: '7.3'
    TYPO3_VERSION: '^9.5'

"Unit Tests with PHP 7.3 and TYPO3 v10":
  <<: *unit_tests
  variables:
    PHP_VERSION: '7.3'
    TYPO3_VERSION: '^10.4'

"Unit Tests with PHP 7.4 and TYPO3 v8":
  <<: *unit_tests
  variables:
    PHP_VERSION: '7.4'
    TYPO3_VERSION: '^8.7'

"Unit Tests with PHP 7.4 and TYPO3 v9":
  <<: *unit_tests
  variables:
    PHP_VERSION: '7.4'
    TYPO3_VERSION: '^9.5'

"Unit Tests with PHP 7.4 and TYPO3 v10":
  <<: *unit_tests
  variables:
    PHP_VERSION: '7.4'
    TYPO3_VERSION: '^10.4'

"Unit Tests with PHP 8.0 and TYPO3 v10":
  <<: *unit_tests
  variables:
    PHP_VERSION: '8.0'
    TYPO3_VERSION: '^10.4'
  allow_failure: true

"Unit Tests with PHP 8.0 and TYPO3 v11":
  <<: *unit_tests
  variables:
    PHP_VERSION: '8.0'
    TYPO3_VERSION: '^10.4'
  allow_failure: true

"Mutation Tests":
  stage: test
  image: php:7.4
  variables:
    GIT_STRATEGY: "clone"
  allow_failure: true
  before_script:
    - set -xe
    - apt-get update -yqq
    - apt-get install git unzip zlib1g-dev libzip-dev -yqq
    - docker-php-ext-install zip
    - pecl install xdebug
    - docker-php-ext-enable xdebug
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    - export TYPO3_PATH_WEB="$PWD/private"
    - composer config cache-dir /cache/composer
  script:
    - composer install --ignore-platform-reqs
    # Have to install it here instead of in composer.json the version using the json output isn't compatible with PHP 7.2
    - composer require --dev infection/infection
    - XDEBUG_MODE=coverage ./vendor/bin/infection --min-msi=80 --min-covered-msi=80 --threads=4
  artifacts:
    when: always
    paths:
      - build/infection-log.json
    expire_in: 30 min

"Mutation Badges":
  stage: badges
  image: python:3.9
  allow_failure: true
  needs: ["Mutation Tests"]
  before_script:
    - echo "Python other dependencies installation"
    - pip3 install anybadge
    - apt update -y
    - apt install -y jq bc
  script:
    - mkdir badges
    - cd badges
    - mutation_msi=$(cat ../build/infection-log.json | jq .stats.msi)
    - anybadge -l "Mutation MSI" -v $mutation_msi -f mutation_msi.svg 50=red 90=yellow
    - mutation_mcc=$(cat ../build/infection-log.json | jq .stats.mutationCodeCoverage)
    - anybadge -l "Mutation MCC" -v $mutation_mcc -f mutation_mcc.svg 50=red 90=yellow
    - mutation_ccmsi=$(cat ../build/infection-log.json | jq .stats.coveredCodeMsi)
    - anybadge -l "Mutation CCMSI" -v $mutation_ccmsi -f mutation_ccmsi.svg 50=red 90=yellow
  artifacts:
    paths:
      - badges/
    when: always
    expire_in: 4 weeks

"Upload to TER":
  stage: release
  image: composer:2.0.7
  only:
    - tags
  before_script:
    - composer global require typo3/tailor
  script:
    - >
      if [ -n "$CI_COMMIT_TAG" ] && [ -n "$TYPO3_API_TOKEN" ] && [ -n "$TYPO3_EXTENSION_KEY" ]; then
        echo -e "Set version to ${CI_COMMIT_TAG} in ext_emconf.php"
        /tmp/vendor/bin/tailor set-version --no-docs -- $CI_COMMIT_TAG
        echo -e "Preparing upload of release ${CI_COMMIT_TAG} to TER\n"
        # Cleanup before we upload
        git reset --hard HEAD && git clean -fx
        # Upload
        TAG_MESSAGE=`git tag -n10 -l $CI_COMMIT_TAG | sed 's/^[0-9.]*[ ]*//g'`
        echo "Uploading release ${CI_COMMIT_TAG} to TER"
        /tmp/vendor/bin/tailor ter:publish --comment "$TAG_MESSAGE" "$CI_COMMIT_TAG" "$TYPO3_EXTENSION_KEY"
      fi;
